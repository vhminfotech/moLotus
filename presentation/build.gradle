/*apply plugin: 'com.android.application'
apply plugin: 'realm-android' // Realm needs to be before Kotlin or the build will fail
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
// Apply the Crashlytics Gradle plugin
apply plugin: 'com.google.firebase.crashlytics'
apply plugin: 'com.google.gms.google-services'*/
plugins {
    id("com.android.application")
    id("realm-android")
    id("kotlin-android")
    id("kotlin-android-extensions")
    id("kotlin-kapt")
    id("com.google.firebase.crashlytics")
    id("com.google.gms.google-services")
    id("com.apollographql.apollo3").version("3.3.0")
}



android {
    compileSdkVersion 31
//    buildToolsVersion "29.0.3"
    flavorDimensions "analytics"
    configurations.all {
        resolutionStrategy { force 'androidx.core:core-ktx:1.6.0' }
    }
    defaultConfig {
        applicationId "com.sms.moLotus"
        minSdkVersion 21
        targetSdkVersion 31
        versionCode 1
        versionName "1.0.0"
//        setProperty("archivesBaseName", "moLotus-v${versionName}")
        multiDexEnabled true //important
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

//        setProperty("archivesBaseName", "moLotus-v${versionName}")
    }

    signingConfigs {
        release
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    lintOptions {
        abortOnError false
    }

    productFlavors {
        withAnalytics { dimension "analytics" }
        noAnalytics { dimension "analytics" }
    }

    kapt {
        arguments {
            arg("room.schemaLocation", "$projectDir/schemas")
        }
    }

    if (System.getenv("CI") == "true") {
        signingConfigs.release.storeFile = file("../keystore")
        signingConfigs.release.storePassword = System.getenv("keystore_password")
        signingConfigs.release.keyAlias = System.getenv("key_alias")
        signingConfigs.release.keyPassword = System.getenv("key_password")
    }

    dexOptions {
        incremental true
        javaMaxHeapSize "4g" // 2g should be also OK
    }
}

androidExtensions {
    experimental = true
}

configurations {
    noAnalyticsDebug
    noAnalyticsRelease
    withAnalyticsDebug
    withAnalyticsRelease
}

apollo {
    packageName.set("com.sms.moLotus")
    generateKotlinModels.set(true)
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'com.android.support:multidex:1.0.3'


    // material design

    implementation 'com.google.android.material:material:1.3.0'

    // lifecycle
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"

    // androidx
    implementation "androidx.appcompat:appcompat:$androidx_appcompat_version"
    implementation "androidx.constraintlayout:constraintlayout:$androidx_constraintlayout_version"
    implementation "androidx.core:core-ktx:1.1.0"
    implementation "androidx.emoji:emoji-appcompat:$androidx_emoji_version"
    implementation "androidx.viewpager2:viewpager2:$androidx_viewpager_version"
    implementation "com.google.android.material:material:$material_version"

    // conductor
    implementation "com.bluelinelabs:conductor:$conductor_version"
    implementation "com.bluelinelabs:conductor-archlifecycle:$conductor_version"

    // glide
    implementation "com.github.bumptech.glide:glide:$glide_version"
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:2.0.4'
    implementation 'androidx.test:core-ktx:1.4.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    kapt "com.github.bumptech.glide:compiler:$glide_version"

    // exoplayer
    implementation "com.google.android.exoplayer:exoplayer-core:$exoplayer_version"
    implementation("com.google.android.exoplayer:exoplayer-ui:$exoplayer_version", {
        exclude group: "com.android.support", module: "support-media-compat"
    })

    // rxbinding
    implementation "com.jakewharton.rxbinding2:rxbinding-kotlin:$rxbinding_version"
    implementation "com.jakewharton.rxbinding2:rxbinding-support-v4-kotlin:$rxbinding_version"

    // autodispose
    implementation "com.uber.autodispose:autodispose-android-archcomponents:$autodispose_version"
    implementation "com.uber.autodispose:autodispose-android-archcomponents-test:$autodispose_version"
    implementation "com.uber.autodispose:autodispose-android:$autodispose_version"
    implementation "com.uber.autodispose:autodispose:$autodispose_version"
    implementation "com.uber.autodispose:autodispose-lifecycle:$autodispose_version"

    // dagger
    implementation "com.google.dagger:dagger:$dagger_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_version"
    compileOnly "javax.annotation:jsr250-api:1.0"

    // ezvcard
    implementation('com.googlecode.ez-vcard:ez-vcard:0.10.4', {
        exclude group: "org.jsoup", module: "jsoup"
        exclude group: "org.freemarker", module: "freemarker"
        exclude group: "com.fasterxml.jackson.core", module: "jackson-core"
    })

    // realm
    implementation("io.realm:android-adapters:$realm_adapters_version") { transitive = false }
    kapt "io.realm:realm-annotations:$realm_version"
    kapt "io.realm:realm-annotations-processor:$realm_version"

    // rxjava
    implementation "io.reactivex.rxjava2:rxandroid:$rxandroid_version"
    implementation "io.reactivex.rxjava2:rxjava:$rxjava_version"
    implementation "io.reactivex.rxjava2:rxkotlin:$rxkotlin_version"
    implementation "com.uber.rxdogtag:rxdogtag:$rxdogtag_version"
    implementation "com.uber.rxdogtag:rxdogtag-autodispose:$rxdogtag_version"


    // testing
    androidTestImplementation("androidx.test.espresso:espresso-core:$espresso_version", {
        exclude group: "com.android.support", module: "support-annotations"
    })
    androidTestImplementation "org.mockito:mockito-android:$mockito_version"
    testImplementation "androidx.test:runner:$androidx_testrunner_version"
    testImplementation "junit:junit:$junit_version"
    testImplementation "org.mockito:mockito-core:$mockito_version"

    // moshi
    implementation "com.squareup.moshi:moshi:$moshi_version"
    debugImplementation "com.squareup.moshi:moshi-kotlin:$moshi_version"
    kaptRelease "com.squareup.moshi:moshi-kotlin-codegen:$moshi_version"

    // coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-rx2:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-reactive:$coroutines_version"

    implementation "com.github.chrisbanes:PhotoView:2.0.0"
    implementation "com.f2prateek.rx.preferences2:rx-preferences:$rx_preferences_version"
    implementation "com.google.android:flexbox:0.3.1"
    implementation "com.jakewharton.timber:timber:$timber_version"
    implementation "com.squareup.moshi:moshi-kotlin:$moshi_version"
    implementation "me.leolin:ShortcutBadger:1.1.22"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation project(":android-smsmms")
    implementation project(":common")
    implementation project(':data')
    implementation project(':domain')
    implementation project(':library')

//    withAnalyticsImplementation 'com.google.firebase:firebase-crashlytics:17.3.0'
    withAnalyticsImplementation "com.android.billingclient:billing:$billing_version"
    withAnalyticsImplementation "com.android.billingclient:billing-ktx:$billing_version"
    noAnalyticsDebug project(path: ':data', configuration: 'noAnalyticsDebug')
    noAnalyticsRelease project(path: ':data', configuration: 'noAnalyticsRelease')
    withAnalyticsDebug project(path: ':data', configuration: 'withAnalyticsDebug')
    withAnalyticsRelease project(path: ':data', configuration: 'withAnalyticsRelease')


    //for AndroidX use:
    implementation 'com.github.3llomi:RecordView:3.0.2'

    //for video trimming and compression
    //implementation 'com.github.a914-gowtham:android-video-trimmer-litr:1.5.11'

    //for auto fetch otp
    implementation("com.android.volley:volley:1.2.0")
    implementation 'com.google.android.gms:play-services-auth:19.0.0'
    implementation 'com.google.android.gms:play-services-auth-api-phone:17.5.0'
    implementation 'com.google.android.gms:play-services-base:11.0.1'
    implementation 'com.google.android.gms:play-services-identity:11.0.1'


    //Retrofit
    implementation 'com.google.code.gson:gson:2.8.8'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.okhttp3:okhttp:4.9.2'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.2.1'

    // Import the BoM for the Firebase platform
    implementation platform('com.google.firebase:firebase-bom:29.1.0')

    // Declare the dependencies for the Crashlytics and Analytics libraries
    // When using the BoM, you don't specify versions in Firebase library dependencies
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation 'com.google.firebase:firebase-analytics-ktx'

    //apollo
    implementation("com.apollographql.apollo3:apollo-runtime:3.3.0")

//    implementation "com.apollographql.apollo:apollo-runtime:2.4.0"
//    implementation "com.apollographql.apollo:apollo-android-support:2.4.0"

    //Room Database
    implementation "androidx.room:room-runtime:2.4.2"
    implementation "androidx.room:room-ktx:2.4.2"
    kapt "androidx.room:room-compiler:2.4.2"
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.4.1' // LifecycleScope


    //socket
    implementation ('io.socket:socket.io-client:2.0.0') {
        exclude group: 'org.json', module: 'json'
    }

}

/*if (getGradle().getStartParameter().getTaskRequests().toString().contains("WithAnalytics")) {
    apply plugin: 'com.google.gms.google-services'
//    apply plugin: 'com.google.firebase.crashlytics'
}*/
